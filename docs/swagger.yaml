basePath: /api
definitions:
  rest_api_gin_internal_dtos.AssignRolesRequest:
    properties:
      roles:
        items:
          type: integer
        type: array
      userId:
        type: integer
    type: object
  rest_api_gin_internal_dtos.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  rest_api_gin_internal_dtos.GetAllRoleResponse:
    properties:
      Rolelist:
        items:
          $ref: '#/definitions/rest_api_gin_internal_dtos.GetSingleRoleResponse'
        type: array
    type: object
  rest_api_gin_internal_dtos.GetAllUserResponse:
    properties:
      Userlist:
        items:
          $ref: '#/definitions/rest_api_gin_internal_dtos.GetSingleUserResponse'
        type: array
    type: object
  rest_api_gin_internal_dtos.GetSingleRoleResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  rest_api_gin_internal_dtos.GetSingleUserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      roles:
        items:
          $ref: '#/definitions/rest_api_gin_internal_dtos.RoleList'
        type: array
    type: object
  rest_api_gin_internal_dtos.RegisterRoleRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  rest_api_gin_internal_dtos.RegisterUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  rest_api_gin_internal_dtos.RoleList:
    properties:
      name:
        type: string
    type: object
  rest_api_gin_internal_dtos.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  rest_api_gin_internal_dtos.UpdateRoleRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - name
    type: object
  rest_api_gin_internal_dtos.UpdateUserRequest:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: User Management System Sample App.
  title: GO & Gin API
  version: "1.0"
paths:
  /assign-roles:
    put:
      consumes:
      - application/json
      description: Assign multiple roles to a specific user by body
      parameters:
      - description: User ID and Role IDs
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/rest_api_gin_internal_dtos.AssignRolesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
      summary: Assign Roles to User
      tags:
      - assign role
  /deletebyid_role/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a single role by ID
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.GetSingleRoleResponse'
        "500":
          description: Internal server Error
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
      summary: Delete role by ID
      tags:
      - roles
  /get_roles:
    get:
      consumes:
      - application/json
      description: Retrieve all registered roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.GetAllRoleResponse'
        "500":
          description: Internal server Error
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
      summary: Get all roles
      tags:
      - roles
  /get_users:
    get:
      consumes:
      - application/json
      description: Retrieve all registered users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.GetAllUserResponse'
        "500":
          description: Internal server Error
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
      summary: Get all users
      tags:
      - users
  /getbyid_role/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a single role by ID
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.GetSingleRoleResponse'
        "500":
          description: Internal server Error
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
      summary: Get role by ID
      tags:
      - roles
  /getbyid_user/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a single user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.GetSingleUserResponse'
        "500":
          description: Internal server Error
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
      summary: Get user by ID
      tags:
      - users
  /register_role:
    post:
      consumes:
      - application/json
      description: Registers a role with name
      parameters:
      - description: Role registration data
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/rest_api_gin_internal_dtos.RegisterRoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.GetSingleRoleResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
        "500":
          description: Could not register
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
      summary: Register a new role
      tags:
      - roles
  /register_user:
    post:
      consumes:
      - application/json
      description: Registers a user with email, password, and name
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/rest_api_gin_internal_dtos.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.GetSingleUserResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
        "500":
          description: Could not register
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
      summary: Register a new user
      tags:
      - users
  /update_role:
    put:
      consumes:
      - application/json
      description: Update role body
      parameters:
      - description: Role Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/rest_api_gin_internal_dtos.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
      summary: Update Role
      tags:
      - roles
  /update_user:
    put:
      consumes:
      - application/json
      description: Update user body
      parameters:
      - description: User Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/rest_api_gin_internal_dtos.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest_api_gin_internal_dtos.ErrorResponse'
      summary: Update User
      tags:
      - users
swagger: "2.0"
